parameter               I2C_NUM               = 16;
parameter               NUM_WID               = $clog2(I2C_NUM);

reg                     r_i2cm_top_nack_0     = 1'h0;
reg                     r_i2cm_top_type_0     = 1'h0;
reg                     r_i2cm_top_stb_0      = 1'h0;
reg                     r_i2cm_top_seq_0      = 1'h0;
reg [NUM_WID-1:0]       r_i2cm_top_num_0      = 8'h00;
reg [5:0]               r_i2cm_top_dev_id_0   = 6'h00;
reg [7:0]               r_i2cm_top_addr_0     = 8'h00;
reg                     r_i2cm_top_nack_1     = 1'h0;
reg                     r_i2cm_top_type_1     = 1'h0;
reg                     r_i2cm_top_stb_1      = 1'h0;
reg                     r_i2cm_top_seq_1      = 1'h0;
reg [NUM_WID-1:0]       r_i2cm_top_num_1      = 8'h00;
reg [5:0]               r_i2cm_top_dev_id_1   = 6'h00;
reg [7:0]               r_i2cm_top_addr_1     = 8'h00;

reg                     ini_id_dir_0          = 1'h0;     //this present the master read(1),write(0) direction . the MSB of the slave ID 
reg                     ini_id_dir_1          = 1'h0;     //this present the master read(1),write(0) direction . the MSB of the slave ID 
reg                     ini_data_nack         = 1'h0;     //this will control slave  respond nack or not in receive the master address . 
                                                          //set to 1 , slave will give nack
reg                     ini_dev_id_nack       = 1'h0;     //set to 1 will enable . this will let dev_id cannot connect to slave for one times 
reg                     ini_trg_0             = 1'h0;     //trigger 0 will be active 
reg                     ini_trg_1             = 1'h0;     //trigger 1 will be active 
reg [1:0]               ini_trg_0_dly         = 2'h0;     //trigger will active 0:no any delay 1:delay #2000 2:after receive a finish pulse
reg [1:0]               ini_trg_1_dly         = 2'h0;     //trigger will active 0:no any delay 1:delay #2000 2:after receive a finish pulse
reg [1:0]               ini_nack_timing       = 2'h0;     //nack will occur in difference ABR FSM. 0:occur in ABR_WAIT_INT status, 1:occur in 
                                                          //ABR_TRG_0 status, 2:occur in ABR_TRG_1_ADDR status
/*
reg [7:0]               r_i2cm_data_0         = 8'h00;
reg [7:0]               r_i2cm_data_1         = 8'h00;
reg [7:0]               r_i2cm_data_2         = 8'h00;
reg [7:0]               r_i2cm_data_3         = 8'h00;
reg [7:0]               r_i2cm_data_4         = 8'h00;
reg [7:0]               r_i2cm_data_5         = 8'h00;
reg [7:0]               r_i2cm_data_6         = 8'b10101010;
reg [7:0]               r_i2cm_data_7         = 8'b01010101;
reg [7:0]               r_i2cm_data_8         = 8'b01010101;
reg [7:0]               r_i2cm_data_9         = 8'b10101010;
reg [7:0]               r_i2cm_data_10        = 8'h00;
reg [7:0]               r_i2cm_data_11        = 8'h00;
reg [7:0]               r_i2cm_data_12        = 8'h00;
reg [7:0]               r_i2cm_data_13        = 8'h00;
reg [7:0]               r_i2cm_data_14        = 8'h00;
reg [7:0]               r_i2cm_data_15        = 8'h00;
reg [7:0]               r_i2cm_data_16        = 8'h00;
reg [7:0]               r_i2cm_data_17        = 8'h00;
reg [7:0]               r_i2cm_data_18        = 8'h00;
reg [7:0]               r_i2cm_data_19        = 8'h00;
reg [7:0]               r_i2cm_data_20        = 8'h00;
reg [7:0]               r_i2cm_data_21        = 8'h00;
reg [7:0]               r_i2cm_data_22        = 8'b10101010;
reg [7:0]               r_i2cm_data_23        = 8'b01010101;
reg [7:0]               r_i2cm_data_24        = 8'b01010101;
reg [7:0]               r_i2cm_data_25        = 8'b10101010;
reg [7:0]               r_i2cm_data_26        = 8'h00;
reg [7:0]               r_i2cm_data_27        = 8'h00;
reg [7:0]               r_i2cm_data_28        = 8'h00;
reg [7:0]               r_i2cm_data_29        = 8'h00;
reg [7:0]               r_i2cm_data_30        = 8'h00;
reg [7:0]               r_i2cm_data_31        = 8'h00;

reg [7:0]               reg_awb_bgain_07_00   = 8'h00;
reg [3:0]               reg_awb_bgain_11_08   = 4'h0;
reg [7:0]               reg_awb_ggain_07_00   = 8'h00;
reg [3:0]               reg_awb_ggain_11_08   = 4'h0;
reg [7:0]               reg_awb_rgain_07_00   = 8'h00;
reg [3:0]               reg_awb_rgain_11_08   = 4'h0;
reg [7:0]               reg_ssr_expln_07_00   = 8'h00;
reg [7:0]               reg_ssr_expln_15_08   = 8'h00;
reg [7:0]               reg_ssr_exptp_07_00   = 8'h00;
reg [3:0]               reg_ssr_exptp_11_08   = 4'h0;
*/
